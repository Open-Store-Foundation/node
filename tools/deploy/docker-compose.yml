version: '3.8'

services:
  admin:
    build:
      dockerfile: Dockerfile.admin
    container_name: openstore-admin
    volumes:
      - ./../../:/app
      - ${VOLUME_DIR}:/volume
      - ${CONFIG_DIR}:/config
    networks:
      - client
      - oracle
      - validator
    stdin_open: true

  api-client:
    build:
      dockerfile: Dockerfile.service
    container_name: openstore-api-client
#    command: ["./launch.sh"]
    working_dir: "/app"
    expose:
      - "8080"
    volumes:
      - ${VOLUME_DIR}/api-client/:/app
    env_file:
      - ${CONFIG_DIR}/api-client/.env
    environment:
      - RUST_LOG=${RUST_LOG:-info}
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    networks:
      - client
    stdin_open: true
    tty: true
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 40s

  daemon-client:
    build:
      dockerfile: Dockerfile.service
    container_name: openstore-daemon-client
    command: ["./launch.sh"]
    working_dir: "/app"
    volumes:
      - ${VOLUME_DIR}/daemon-client/:/app
    env_file:
      - ${CONFIG_DIR}/daemon-client/.env
    environment:
      - RUST_LOG=${RUST_LOG:-info}
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - client
    stdin_open: true
    tty: true

  oracle:
    build:
      dockerfile: Dockerfile.service
    container_name: openstore-oracle
    command: ["./launch.sh"]
    working_dir: "/app"
    volumes:
      - ${VOLUME_DIR}/oracle/:/app
    env_file:
      - ${CONFIG_DIR}/oracle/.env
    environment:
      - RUST_LOG=${RUST_LOG:-info}
    restart: unless-stopped
    networks:
      - oracle
    stdin_open: true
    tty: true

  validator:
    build:
      dockerfile: Dockerfile.service
    container_name: openstore-validator
    command: ["./launch.sh"]
    working_dir: "/app"
    volumes:
      - ${VOLUME_DIR}/sqlite/:/app/sqlite
      - ${VOLUME_DIR}/validator/:/app
    env_file:
      - ${CONFIG_DIR}/validator/.env
    environment:
      - RUST_LOG=${RUST_LOG:-info}
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - validator
    stdin_open: true
    tty: true

  postgres:
    image: postgres:17
    container_name: openstore-postgres
    env_file:
      - ${CONFIG_DIR}/postgres/.env
    ports:
      - "5432:5432"
    volumes:
      - ${VOLUME_DIR}/postgres:/var/lib/postgresql/data
    networks:
      - client
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: openstore-redis
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    ports:
      - "6379:6379"
    volumes:
      - ${VOLUME_DIR}/redis:/redis
      - ${CONFIG_DIR}/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - client
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  nginx:
    image: nginx:alpine
    container_name: openstore-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${CONFIG_DIR}/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${CONFIG_DIR}/nginx:/etc/nginx/templates:ro
      - ${VOLUME_DIR}/certbot/conf:/etc/letsencrypt:ro
      - ${VOLUME_DIR}/certbot/www:/var/www/certbot:ro
      - ${VOLUME_DIR}/nginx/logs:/var/log/nginx
    env_file:
      - ${CONFIG_DIR}/nginx/.env
    environment:
      - NGINX_ENVSUBST_TEMPLATE_SUFFIX=.template
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/conf.d
    depends_on:
      - api-client
    networks:
      - client
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  certbot:
    image: certbot/certbot
    container_name: openstore-certbot
    env_file:
      - ${CONFIG_DIR}/nginx/.env
    volumes:
      - ${VOLUME_DIR}/certbot/conf:/etc/letsencrypt
      - ${VOLUME_DIR}/certbot/www:/var/www/certbot
    command: >
      certonly --webroot --webroot-path=/var/www/certbot 
      --email info@openstore.foundation --agree-tos --no-eff-email 
      -d openstore.foundation
    depends_on:
      - nginx
    profiles:
      - certbot

networks:
  client:
    driver: bridge
  oracle:
    driver: bridge
  validator:
    driver: bridge
